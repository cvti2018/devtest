//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 19/04/2018 15:13:19
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using CadastroEpi.Domain.Model;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CadastroEpi.Domain.Model", "Empresa_Funcao", "Empresa", RelationshipMultiplicity.One, typeof(CadastroEpi.Domain.Model.Empresa), "Funcoes", RelationshipMultiplicity.Many, typeof(CadastroEpi.Domain.Model.Funcao), true)]
[assembly: EdmRelationshipAttribute("CadastroEpi.Domain.Model", "Funcao_Funcionario", "Funcao", RelationshipMultiplicity.One, typeof(CadastroEpi.Domain.Model.Funcao), "Funcionarios", RelationshipMultiplicity.Many, typeof(CadastroEpi.Domain.Model.Funcionario), true)]
[assembly: EdmRelationshipAttribute("CadastroEpi.Domain.Model", "Epi_Funcionario", "Epis", RelationshipMultiplicity.Many, typeof(CadastroEpi.Domain.Model.Epi), "Funcionarios", RelationshipMultiplicity.Many, typeof(CadastroEpi.Domain.Model.Funcionario))]

#endregion

namespace CadastroEpi.Db
{

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities() : 
                base(@"name=DefaultConnection", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities(string connectionString) : 
                base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Funcionario> Funcionarios
        {
            get
            {
                if ((_Funcionarios == null))
                {
                    _Funcionarios = base.CreateObjectSet<Funcionario>("Funcionarios");
                }
                return _Funcionarios;
            }
        }
        private ObjectSet<Funcionario> _Funcionarios;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Empresa> Empresas
        {
            get
            {
                if ((_Empresas == null))
                {
                    _Empresas = base.CreateObjectSet<Empresa>("Empresas");
                }
                return _Empresas;
            }
        }
        private ObjectSet<Empresa> _Empresas;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Funcao> Funcaos
        {
            get
            {
                if ((_Funcaos == null))
                {
                    _Funcaos = base.CreateObjectSet<Funcao>("Funcaos");
                }
                return _Funcaos;
            }
        }
        private ObjectSet<Funcao> _Funcaos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Epi> Epis
        {
            get
            {
                if ((_Epis == null))
                {
                    _Epis = base.CreateObjectSet<Epi>("Epis");
                }
                return _Epis;
            }
        }
        private ObjectSet<Epi> _Epis;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Funcionarios EntitySet.
        /// </summary>
        public void AddToFuncionarios(Funcionario funcionario)
        {
            base.AddObject("Funcionarios", funcionario);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Empresas EntitySet.
        /// </summary>
        public void AddToEmpresas(Empresa empresa)
        {
            base.AddObject("Empresas", empresa);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Funcaos EntitySet.
        /// </summary>
        public void AddToFuncaos(Funcao funcao)
        {
            base.AddObject("Funcaos", funcao);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Epis EntitySet.
        /// </summary>
        public void AddToEpis(Epi epi)
        {
            base.AddObject("Epis", epi);
        }

        #endregion
    }
}
