//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 19/04/2018 15:13:19
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace CadastroEpi.Domain.Model
{

    /// <summary>
    /// There are no comments for CadastroEpi.Domain.Model.Funcionario in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FuncionarioId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CadastroEpi.Domain.Model", Name="Funcionario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Funcionario : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Funcionario object.
        /// </summary>
        /// <param name="funcionarioId">Initial value of FuncionarioId.</param>
        /// <param name="nomeFuncionario">Initial value of NomeFuncionario.</param>
        /// <param name="cpf">Initial value of Cpf.</param>
        /// <param name="funcaoId">Initial value of FuncaoId.</param>
        public static Funcionario CreateFuncionario(int funcionarioId, string nomeFuncionario, string cpf, int funcaoId)
        {
            Funcionario funcionario = new Funcionario();
            funcionario.FuncionarioId = funcionarioId;
            funcionario.NomeFuncionario = nomeFuncionario;
            funcionario.Cpf = cpf;
            funcionario.FuncaoId = funcaoId;
            return funcionario;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FuncionarioId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FuncionarioId
        {
            get
            {
                int value = _FuncionarioId;
                OnGetFuncionarioId(ref value);
                return value;
            }
            set
            {
                if (_FuncionarioId != value)
                {
                  OnFuncionarioIdChanging(ref value);
                  ReportPropertyChanging("FuncionarioId");
                  _FuncionarioId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuncionarioId");
                  OnFuncionarioIdChanged();
              }
            }
        }
        private int _FuncionarioId;
        partial void OnGetFuncionarioId(ref int value);
        partial void OnFuncionarioIdChanging(ref int value);
        partial void OnFuncionarioIdChanged();
    
        /// <summary>
        /// There are no comments for NomeFuncionario in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string NomeFuncionario
        {
            get
            {
                string value = _NomeFuncionario;
                OnGetNomeFuncionario(ref value);
                return value;
            }
            set
            {
                if (_NomeFuncionario != value)
                {
                  OnNomeFuncionarioChanging(ref value);
                  ReportPropertyChanging("NomeFuncionario");
                  _NomeFuncionario = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NomeFuncionario");
                  OnNomeFuncionarioChanged();
              }
            }
        }
        private string _NomeFuncionario;
        partial void OnGetNomeFuncionario(ref string value);
        partial void OnNomeFuncionarioChanging(ref string value);
        partial void OnNomeFuncionarioChanged();
    
        /// <summary>
        /// There are no comments for Cpf in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Cpf
        {
            get
            {
                string value = _Cpf;
                OnGetCpf(ref value);
                return value;
            }
            set
            {
                if (_Cpf != value)
                {
                  OnCpfChanging(ref value);
                  ReportPropertyChanging("Cpf");
                  _Cpf = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Cpf");
                  OnCpfChanged();
              }
            }
        }
        private string _Cpf;
        partial void OnGetCpf(ref string value);
        partial void OnCpfChanging(ref string value);
        partial void OnCpfChanged();
    
        /// <summary>
        /// There are no comments for FuncaoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FuncaoId
        {
            get
            {
                int value = _FuncaoId;
                OnGetFuncaoId(ref value);
                return value;
            }
            set
            {
                if (_FuncaoId != value)
                {
                  OnFuncaoIdChanging(ref value);
                  ReportPropertyChanging("FuncaoId");
                  _FuncaoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuncaoId");
                  OnFuncaoIdChanged();
              }
            }
        }
        private int _FuncaoId;
        partial void OnGetFuncaoId(ref int value);
        partial void OnFuncaoIdChanging(ref int value);
        partial void OnFuncaoIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Funcao in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CadastroEpi.Domain.Model", "Funcao_Funcionario", "Funcao")]
        public virtual Funcao Funcao
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Funcao>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcao").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Funcao>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcao").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Funcao in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcao> FuncaoReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Funcao>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcao");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Funcao>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcao", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Funcao>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcao").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Epis in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CadastroEpi.Domain.Model", "Epi_Funcionario", "Epis")]
        public virtual EntityCollection<Epi> Epis
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Epi>("CadastroEpi.Domain.Model.Epi_Funcionario", "Epis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Epi>("CadastroEpi.Domain.Model.Epi_Funcionario", "Epis", value);
                }
            }
        }

        #endregion
    }

}
