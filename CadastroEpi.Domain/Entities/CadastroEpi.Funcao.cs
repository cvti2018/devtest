//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 19/04/2018 15:13:19
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace CadastroEpi.Domain.Model
{

    /// <summary>
    /// There are no comments for CadastroEpi.Domain.Model.Funcao in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FuncaoId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="CadastroEpi.Domain.Model", Name="Funcao")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Funcao : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Funcao object.
        /// </summary>
        /// <param name="funcaoId">Initial value of FuncaoId.</param>
        /// <param name="nomeFuncao">Initial value of NomeFuncao.</param>
        /// <param name="empresaId">Initial value of EmpresaId.</param>
        public static Funcao CreateFuncao(int funcaoId, string nomeFuncao, int empresaId)
        {
            Funcao funcao = new Funcao();
            funcao.FuncaoId = funcaoId;
            funcao.NomeFuncao = nomeFuncao;
            funcao.EmpresaId = empresaId;
            return funcao;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FuncaoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int FuncaoId
        {
            get
            {
                int value = _FuncaoId;
                OnGetFuncaoId(ref value);
                return value;
            }
            set
            {
                if (_FuncaoId != value)
                {
                  OnFuncaoIdChanging(ref value);
                  ReportPropertyChanging("FuncaoId");
                  _FuncaoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FuncaoId");
                  OnFuncaoIdChanged();
              }
            }
        }
        private int _FuncaoId;
        partial void OnGetFuncaoId(ref int value);
        partial void OnFuncaoIdChanging(ref int value);
        partial void OnFuncaoIdChanged();
    
        /// <summary>
        /// There are no comments for NomeFuncao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string NomeFuncao
        {
            get
            {
                string value = _NomeFuncao;
                OnGetNomeFuncao(ref value);
                return value;
            }
            set
            {
                if (_NomeFuncao != value)
                {
                  OnNomeFuncaoChanging(ref value);
                  ReportPropertyChanging("NomeFuncao");
                  _NomeFuncao = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NomeFuncao");
                  OnNomeFuncaoChanged();
              }
            }
        }
        private string _NomeFuncao;
        partial void OnGetNomeFuncao(ref string value);
        partial void OnNomeFuncaoChanging(ref string value);
        partial void OnNomeFuncaoChanged();
    
        /// <summary>
        /// There are no comments for EmpresaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EmpresaId
        {
            get
            {
                int value = _EmpresaId;
                OnGetEmpresaId(ref value);
                return value;
            }
            set
            {
                if (_EmpresaId != value)
                {
                  OnEmpresaIdChanging(ref value);
                  ReportPropertyChanging("EmpresaId");
                  _EmpresaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmpresaId");
                  OnEmpresaIdChanged();
              }
            }
        }
        private int _EmpresaId;
        partial void OnGetEmpresaId(ref int value);
        partial void OnEmpresaIdChanging(ref int value);
        partial void OnEmpresaIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Empresa in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CadastroEpi.Domain.Model", "Empresa_Funcao", "Empresa")]
        public virtual Empresa Empresa
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Empresa>("CadastroEpi.Domain.Model.Empresa_Funcao", "Empresa").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Empresa>("CadastroEpi.Domain.Model.Empresa_Funcao", "Empresa").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Empresa in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Empresa> EmpresaReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Empresa>("CadastroEpi.Domain.Model.Empresa_Funcao", "Empresa");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Empresa>("CadastroEpi.Domain.Model.Empresa_Funcao", "Empresa", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Empresa>("CadastroEpi.Domain.Model.Empresa_Funcao", "Empresa").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Funcionarios in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CadastroEpi.Domain.Model", "Funcao_Funcionario", "Funcionarios")]
        public virtual EntityCollection<Funcionario> Funcionarios
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Funcionario>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcionarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Funcionario>("CadastroEpi.Domain.Model.Funcao_Funcionario", "Funcionarios", value);
                }
            }
        }

        #endregion
    }

}
